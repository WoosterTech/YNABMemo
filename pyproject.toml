[project]
name = "YNABMemo"
dynamic = ["version"]
description = "YNABMemo - A program to annotate YNAB transactions with Amazon order info "
readme = "README.md"
requires-python = ">=3.11,<3.14"
license = "MIT"
dependencies = [
    "loguru>=0.7.3",
    "pydantic[email]>=2.11.2",
    "pydantic-settings>=2.8.1",
    "rich>=14.0.0",
    "ynab>=1.3.1",
    "typer>=0.15.2",
    "pydantic-core>=2.33.1",
    "furl>=2.1.4",
    "requests>=2.30.0",
    "cache-decorator>=2.2.0",
    "amazon-orders>=4.0.7,<5.0.0",
    "attrmagic",
]

[project.optional-dependencies]
ai = [
    "openai>=1.12.0", # OpenAI Python client for AI summarization
]

[project.urls]
Repository = "https://github.com/WoosterTech/YNABMemo"
Issues = "https://github.com/WoosterTech/YNABMemo/issues"

[dependency-groups]
dev = [
    "basedpyright>=1.29.2",
    "commitizen>=4.8.3",
    "deptry>=0.23.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.4",
    "types-requests>=2.32.0.20250328",
]
test = [
    "faker>=37.1.0",
    "polyfactory>=2.20.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-sugar>=1.0.0",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
minversion = "6.0"
python_files = ["test_*.py"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = "true"

[tool.hatch.build.targets.wheel]
# The source location for the package.
packages = ["src/ynabmemo"]

[tool.uv.sources]
attrmagic = { git = "https://github.com/WoosterTech/AttrMagic.git" }

[tool.basedpyright]
# BasedPyright currently seems like the best type checker option, much faster
# than mypy and with a good extension for VSCode/Cursor.
# https://marketplace.visualstudio.com/items?itemName=detachhead.basedpyright
# https://docs.basedpyright.com/latest/configuration/config-files/#sample-pyprojecttoml-file
include = ["src", "tests", "devtools"]
# By default BasedPyright is very strict, so you almost certainly want to disable
# some of the rules.
# First, these turn off warnings about (yes) how you ignore warnings:
reportIgnoreCommentWithoutRule = false
reportUnnecessaryTypeIgnoreComment = false
# A few typically noisy warnings are next.
# How many you enable is up to you. The first few are off by default, but you can
# comment/uncomment these as desired:
reportMissingTypeStubs = false
reportUnusedCallResult = false
reportAny = false
reportExplicitAny = false
reportImplicitStringConcatenation = false
reportUnreachable = false
# reportPrivateImportUsage = false
# reportPrivateLocalImportUsage = false
# reportMissingImports = false
# reportUnnecessaryIsInstance = false
# reportUnknownVariableType = false
# reportUnknownArgumentType = false

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "scm"
update_changelog_on_bump = true
major_version_zero = true

[tool.deptry.per_rule_ignores]
DEP003 = ["ynamazon"]
